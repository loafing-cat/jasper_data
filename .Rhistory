# theme_minimal() +
theme_bw() +
# theme_clean() +
theme(legend.position = "none")
p3
###
# violin with dotplot
p3 <- daily_weight %>%
filter(Day %in% complete_weeks$Day) %>%  # filter origin data to only where complete week data available
group_by(week) %>%
mutate(mean_weight = mean(`Weight (lbs)`, na.rm = TRUE), # compute mean/median weight to add to boxplots
median_weight = median(`Weight (lbs)`, na.rm = TRUE),
max_weight = max(`Weight (lbs)`, na.rm = TRUE)  # calculate max weight per week
) %>%
ungroup() %>%
ggplot(aes(x = week, y = `Weight (lbs)`, group = week, fill = factor(week))) +
geom_violin(aes(x = week, y = `Weight (lbs)`, fill = factor(week))) +
geom_boxplot(width = 0.1, color = "black", alpha = 0.2) +
# geom_point(position = position_jitter(width = 0.15), alpha = 0.8, size = 2) +
geom_dotplot(binaxis = "y", stackdir = "center", dotsize = 0.25, fill = "black") +
geom_point(aes(x = week, y = mean_weight), color = "red", size = 3) +
geom_line(aes(x = week, y = mean_weight, group = 1)) +
geom_text(
aes(x = week, y = max_weight + 0.25, label = sprintf('Mean: %.2f lbs', mean_weight)),  # adjust y using max_weight
vjust = 1,
color = 'red'
) +
geom_text(
aes(x = week, y = max_weight + 0.15, label = sprintf('Median: %.2f lbs', median_weight)),  # adjust y using max_weight
vjust = 1,
color = 'blue'
) +
# geom_text(
#   aes(x = week, y = mean_weight, label = sprintf('Mean: %.2f lbs', mean_weight)),
#   vjust = 2.5,
#   color = 'red'
# ) +
# geom_text(
#   aes(x = week, y = median_weight, label = sprintf('Median: %.2f lbs', median_weight)),
#   vjust = -1.5,
#   color = 'blue'
# ) +
geom_text(
data = mean_weights,
aes(x = midpoint, y = 9.7, label = sprintf('Change: %.2f lbs', delta)),
vjust = -0.5,
color = 'black'
) +
labs(x = 'Week',
y = 'Weight (lbs)',
title = "Jasper's Weight (lbs) Distribution",
subtitle = paste0(format(min(complete_weeks$Day), "%m/%d/%Y"), ' - ' , format(max(complete_weeks$Day), "%m/%d/%Y"))
) +
scale_fill_manual(values = custom_colors) +
scale_y_continuous(expand = c(0, 0)) +
scale_x_continuous(breaks = scales::pretty_breaks(n = length(unique(complete_weeks$week)))) +
# theme_minimal() +
theme_bw()
p3
###
# violin with dotplot
p3 <- daily_weight %>%
filter(Day %in% complete_weeks$Day) %>%  # filter origin data to only where complete week data available
group_by(week) %>%
mutate(mean_weight = mean(`Weight (lbs)`, na.rm = TRUE), # compute mean/median weight to add to boxplots
median_weight = median(`Weight (lbs)`, na.rm = TRUE),
max_weight = max(`Weight (lbs)`, na.rm = TRUE)  # calculate max weight per week
) %>%
ungroup() %>%
ggplot(aes(x = week, y = `Weight (lbs)`, group = week, fill = factor(week))) +
geom_violin(aes(x = week, y = `Weight (lbs)`, fill = factor(week))) +
geom_boxplot(width = 0.1, color = "black", alpha = 0.2) +
# geom_point(position = position_jitter(width = 0.15), alpha = 0.8, size = 2) +
geom_dotplot(binaxis = "y", stackdir = "center", dotsize = 0.25, fill = "black") +
geom_point(aes(x = week, y = mean_weight), color = "red", size = 3) +
geom_line(aes(x = week, y = mean_weight, group = 1)) +
geom_text(
aes(x = week, y = max_weight + 0.25, label = sprintf('Mean: %.2f lbs', mean_weight)),  # adjust y using max_weight
vjust = 1,
color = 'red'
) +
geom_text(
aes(x = week, y = max_weight + 0.15, label = sprintf('Median: %.2f lbs', median_weight)),  # adjust y using max_weight
vjust = 1,
color = 'blue'
) +
# geom_text(
#   aes(x = week, y = mean_weight, label = sprintf('Mean: %.2f lbs', mean_weight)),
#   vjust = 2.5,
#   color = 'red'
# ) +
# geom_text(
#   aes(x = week, y = median_weight, label = sprintf('Median: %.2f lbs', median_weight)),
#   vjust = -1.5,
#   color = 'blue'
# ) +
geom_text(
data = mean_weights,
aes(x = midpoint, y = 9.7, label = sprintf('Change: %.2f lbs', delta)),
vjust = -0.5,
color = 'black'
) +
labs(x = 'Week',
y = 'Weight (lbs)',
title = "Jasper's Weight (lbs) Distribution",
subtitle = paste0(format(min(complete_weeks$Day), "%m/%d/%Y"), ' - ' , format(max(complete_weeks$Day), "%m/%d/%Y"))
) +
scale_fill_manual(values = custom_colors) +
scale_y_continuous(expand = c(0, 0)) +
scale_x_continuous(breaks = scales::pretty_breaks(n = length(unique(complete_weeks$week)))) +
theme(legend.position = "none") +
# theme_minimal() +
theme_bw() +
# theme_clean() +
p3
###
# violin with dotplot
p3 <- daily_weight %>%
filter(Day %in% complete_weeks$Day) %>%  # filter origin data to only where complete week data available
group_by(week) %>%
mutate(mean_weight = mean(`Weight (lbs)`, na.rm = TRUE), # compute mean/median weight to add to boxplots
median_weight = median(`Weight (lbs)`, na.rm = TRUE),
max_weight = max(`Weight (lbs)`, na.rm = TRUE)  # calculate max weight per week
) %>%
ungroup() %>%
ggplot(aes(x = week, y = `Weight (lbs)`, group = week, fill = factor(week))) +
geom_violin(aes(x = week, y = `Weight (lbs)`, fill = factor(week))) +
geom_boxplot(width = 0.1, color = "black", alpha = 0.2) +
# geom_point(position = position_jitter(width = 0.15), alpha = 0.8, size = 2) +
geom_dotplot(binaxis = "y", stackdir = "center", dotsize = 0.25, fill = "black") +
geom_point(aes(x = week, y = mean_weight), color = "red", size = 3) +
geom_line(aes(x = week, y = mean_weight, group = 1)) +
geom_text(
aes(x = week, y = max_weight + 0.25, label = sprintf('Mean: %.2f lbs', mean_weight)),  # adjust y using max_weight
vjust = 1,
color = 'red'
) +
geom_text(
aes(x = week, y = max_weight + 0.15, label = sprintf('Median: %.2f lbs', median_weight)),  # adjust y using max_weight
vjust = 1,
color = 'blue'
) +
# geom_text(
#   aes(x = week, y = mean_weight, label = sprintf('Mean: %.2f lbs', mean_weight)),
#   vjust = 2.5,
#   color = 'red'
# ) +
# geom_text(
#   aes(x = week, y = median_weight, label = sprintf('Median: %.2f lbs', median_weight)),
#   vjust = -1.5,
#   color = 'blue'
# ) +
geom_text(
data = mean_weights,
aes(x = midpoint, y = 9.7, label = sprintf('Change: %.2f lbs', delta)),
vjust = -0.5,
color = 'black'
) +
labs(x = 'Week',
y = 'Weight (lbs)',
title = "Jasper's Weight (lbs) Distribution",
subtitle = paste0(format(min(complete_weeks$Day), "%m/%d/%Y"), ' - ' , format(max(complete_weeks$Day), "%m/%d/%Y"))
) +
scale_fill_manual(values = custom_colors) +
scale_y_continuous(expand = c(0, 0)) +
scale_x_continuous(breaks = scales::pretty_breaks(n = length(unique(complete_weeks$week)))) +
theme(legend.position = "none") +
# theme_minimal() +
theme_bw() +
# theme_clean() +
p3
###
# violin with dotplot
p3 <- daily_weight %>%
filter(Day %in% complete_weeks$Day) %>%  # filter origin data to only where complete week data available
group_by(week) %>%
mutate(mean_weight = mean(`Weight (lbs)`, na.rm = TRUE), # compute mean/median weight to add to boxplots
median_weight = median(`Weight (lbs)`, na.rm = TRUE),
max_weight = max(`Weight (lbs)`, na.rm = TRUE)  # calculate max weight per week
) %>%
ungroup() %>%
ggplot(aes(x = week, y = `Weight (lbs)`, group = week, fill = factor(week))) +
geom_violin(aes(x = week, y = `Weight (lbs)`, fill = factor(week))) +
geom_boxplot(width = 0.1, color = "black", alpha = 0.2) +
# geom_point(position = position_jitter(width = 0.15), alpha = 0.8, size = 2) +
geom_dotplot(binaxis = "y", stackdir = "center", dotsize = 0.25, fill = "black") +
geom_point(aes(x = week, y = mean_weight), color = "red", size = 3) +
geom_line(aes(x = week, y = mean_weight, group = 1)) +
geom_text(
aes(x = week, y = max_weight + 0.25, label = sprintf('Mean: %.2f lbs', mean_weight)),  # adjust y using max_weight
vjust = 1,
color = 'red'
) +
geom_text(
aes(x = week, y = max_weight + 0.15, label = sprintf('Median: %.2f lbs', median_weight)),  # adjust y using max_weight
vjust = 1,
color = 'blue'
) +
# geom_text(
#   aes(x = week, y = mean_weight, label = sprintf('Mean: %.2f lbs', mean_weight)),
#   vjust = 2.5,
#   color = 'red'
# ) +
# geom_text(
#   aes(x = week, y = median_weight, label = sprintf('Median: %.2f lbs', median_weight)),
#   vjust = -1.5,
#   color = 'blue'
# ) +
geom_text(
data = mean_weights,
aes(x = midpoint, y = 9.7, label = sprintf('Change: %.2f lbs', delta)),
vjust = -0.5,
color = 'black'
) +
labs(x = 'Week',
y = 'Weight (lbs)',
title = "Jasper's Weight (lbs) Distribution",
subtitle = paste0(format(min(complete_weeks$Day), "%m/%d/%Y"), ' - ' , format(max(complete_weeks$Day), "%m/%d/%Y"))
) +
scale_fill_manual(values = custom_colors) +
scale_y_continuous(expand = c(0, 0)) +
scale_x_continuous(breaks = scales::pretty_breaks(n = length(unique(complete_weeks$week)))) +
# theme_minimal() +
theme_bw() +
# theme_clean() +
theme(legend.position = "none")
p3
###
# violin with dotplot
p3 <- daily_weight %>%
filter(Day %in% complete_weeks$Day) %>%  # filter origin data to only where complete week data available
group_by(week) %>%
mutate(mean_weight = mean(`Weight (lbs)`, na.rm = TRUE), # compute mean/median weight to add to boxplots
median_weight = median(`Weight (lbs)`, na.rm = TRUE),
max_weight = max(`Weight (lbs)`, na.rm = TRUE)  # calculate max weight per week
) %>%
ungroup() %>%
ggplot(aes(x = week, y = `Weight (lbs)`, group = week, fill = factor(week))) +
geom_violin(aes(x = week, y = `Weight (lbs)`, fill = factor(week))) +
geom_boxplot(width = 0.1, color = "black", alpha = 0.2) +
# geom_point(position = position_jitter(width = 0.15), alpha = 0.8, size = 2) +
geom_dotplot(binaxis = "y", stackdir = "center", dotsize = 0.25, fill = "black") +
geom_point(aes(x = week, y = mean_weight), color = "red", size = 3) +
geom_line(aes(x = week, y = mean_weight, group = 1)) +
geom_text(
aes(x = week, y = max_weight + 0.25, label = sprintf('Mean: %.2f lbs', mean_weight)),  # adjust y using max_weight
vjust = 1,
color = 'red'
) +
geom_text(
aes(x = week, y = max_weight + 0.15, label = sprintf('Median: %.2f lbs', median_weight)),  # adjust y using max_weight
vjust = 1,
color = 'blue'
) +
# geom_text(
#   aes(x = week, y = mean_weight, label = sprintf('Mean: %.2f lbs', mean_weight)),
#   vjust = 2.5,
#   color = 'red'
# ) +
# geom_text(
#   aes(x = week, y = median_weight, label = sprintf('Median: %.2f lbs', median_weight)),
#   vjust = -1.5,
#   color = 'blue'
# ) +
geom_text(
data = mean_weights,
aes(x = midpoint, y = 9.7, label = sprintf('Change: %.2f lbs', delta)),
vjust = -0.5,
color = 'black'
) +
labs(x = 'Week',
y = 'Weight (lbs)',
title = "Jasper's Weight (lbs) Distribution",
subtitle = paste0(format(min(complete_weeks$Day), "%m/%d/%Y"), ' - ' , format(max(complete_weeks$Day), "%m/%d/%Y"))
) +
scale_fill_manual(values = custom_colors) +
scale_y_continuous(expand = c(0, 0), n.breaks = 5) +
scale_x_continuous(breaks = scales::pretty_breaks(n = length(unique(complete_weeks$week)))) +
# theme_minimal() +
theme_bw() +
# theme_clean() +
theme(legend.position = "none")
p3
###
# violin with dotplot
p3 <- daily_weight %>%
filter(Day %in% complete_weeks$Day) %>%  # filter origin data to only where complete week data available
group_by(week) %>%
mutate(mean_weight = mean(`Weight (lbs)`, na.rm = TRUE), # compute mean/median weight to add to boxplots
median_weight = median(`Weight (lbs)`, na.rm = TRUE),
max_weight = max(`Weight (lbs)`, na.rm = TRUE)  # calculate max weight per week
) %>%
ungroup() %>%
ggplot(aes(x = week, y = `Weight (lbs)`, group = week, fill = factor(week))) +
geom_violin(aes(x = week, y = `Weight (lbs)`, fill = factor(week))) +
geom_boxplot(width = 0.1, color = "black", alpha = 0.2) +
# geom_point(position = position_jitter(width = 0.15), alpha = 0.8, size = 2) +
geom_dotplot(binaxis = "y", stackdir = "center", dotsize = 0.25, fill = "black") +
geom_point(aes(x = week, y = mean_weight), color = "red", size = 3) +
geom_line(aes(x = week, y = mean_weight, group = 1)) +
geom_text(
aes(x = week, y = max_weight + 0.25, label = sprintf('Mean: %.2f lbs', mean_weight)),  # adjust y using max_weight
vjust = 1,
color = 'red'
) +
geom_text(
aes(x = week, y = max_weight + 0.15, label = sprintf('Median: %.2f lbs', median_weight)),  # adjust y using max_weight
vjust = 1,
color = 'blue'
) +
# geom_text(
#   aes(x = week, y = mean_weight, label = sprintf('Mean: %.2f lbs', mean_weight)),
#   vjust = 2.5,
#   color = 'red'
# ) +
# geom_text(
#   aes(x = week, y = median_weight, label = sprintf('Median: %.2f lbs', median_weight)),
#   vjust = -1.5,
#   color = 'blue'
# ) +
geom_text(
data = mean_weights,
aes(x = midpoint, y = 9.7, label = sprintf('Change: %.2f lbs', delta)),
vjust = -0.5,
color = 'black'
) +
labs(x = 'Week',
y = 'Weight (lbs)',
title = "Jasper's Weight (lbs) Distribution",
subtitle = paste0(format(min(complete_weeks$Day), "%m/%d/%Y"), ' - ' , format(max(complete_weeks$Day), "%m/%d/%Y"))
) +
scale_fill_manual(values = custom_colors) +
scale_y_continuous(expand = c(0, 0), n.breaks = 10) +
scale_x_continuous(breaks = scales::pretty_breaks(n = length(unique(complete_weeks$week)))) +
# theme_minimal() +
theme_bw() +
# theme_clean() +
theme(legend.position = "none")
p3
###
# violin with dotplot
p3 <- daily_weight %>%
filter(Day %in% complete_weeks$Day) %>%  # filter origin data to only where complete week data available
group_by(week) %>%
mutate(mean_weight = mean(`Weight (lbs)`, na.rm = TRUE), # compute mean/median weight to add to boxplots
median_weight = median(`Weight (lbs)`, na.rm = TRUE),
max_weight = max(`Weight (lbs)`, na.rm = TRUE)  # calculate max weight per week
) %>%
ungroup() %>%
ggplot(aes(x = week, y = `Weight (lbs)`, group = week, fill = factor(week))) +
geom_violin(aes(x = week, y = `Weight (lbs)`, fill = factor(week))) +
geom_boxplot(width = 0.1, color = "black", alpha = 0.2) +
# geom_point(position = position_jitter(width = 0.15), alpha = 0.8, size = 2) +
geom_dotplot(binaxis = "y", stackdir = "center", dotsize = 0.25, fill = "black") +
geom_point(aes(x = week, y = mean_weight), color = "red", size = 3) +
geom_line(aes(x = week, y = mean_weight, group = 1)) +
geom_text(
aes(x = week, y = max_weight + 0.25, label = sprintf('Mean: %.2f lbs', mean_weight)),  # adjust y using max_weight
vjust = 1,
color = 'red'
) +
geom_text(
aes(x = week, y = max_weight + 0.15, label = sprintf('Median: %.2f lbs', median_weight)),  # adjust y using max_weight
vjust = 1,
color = 'blue'
) +
# geom_text(
#   aes(x = week, y = mean_weight, label = sprintf('Mean: %.2f lbs', mean_weight)),
#   vjust = 2.5,
#   color = 'red'
# ) +
# geom_text(
#   aes(x = week, y = median_weight, label = sprintf('Median: %.2f lbs', median_weight)),
#   vjust = -1.5,
#   color = 'blue'
# ) +
geom_text(
data = mean_weights,
aes(x = midpoint, y = 9.7, label = sprintf('Change: %.2f lbs', delta)),
vjust = -0.5,
color = 'black'
) +
labs(x = 'Week',
y = 'Weight (lbs)',
title = "Jasper's Weight (lbs) Distribution",
subtitle = paste0(format(min(complete_weeks$Day), "%m/%d/%Y"), ' - ' , format(max(complete_weeks$Day), "%m/%d/%Y"))
) +
scale_fill_manual(values = custom_colors) +
scale_y_continuous(expand = c(0, 0), n.breaks = 8) +
scale_x_continuous(breaks = scales::pretty_breaks(n = length(unique(complete_weeks$week)))) +
# theme_minimal() +
theme_bw() +
# theme_clean() +
theme(legend.position = "none")
p3
###
# violin with dotplot
p3 <- daily_weight %>%
filter(Day %in% complete_weeks$Day) %>%  # filter origin data to only where complete week data available
group_by(week) %>%
mutate(mean_weight = mean(`Weight (lbs)`, na.rm = TRUE), # compute mean/median weight to add to boxplots
median_weight = median(`Weight (lbs)`, na.rm = TRUE),
max_weight = max(`Weight (lbs)`, na.rm = TRUE)  # calculate max weight per week
) %>%
ungroup() %>%
ggplot(aes(x = week, y = `Weight (lbs)`, group = week, fill = factor(week))) +
geom_violin(aes(x = week, y = `Weight (lbs)`, fill = factor(week))) +
geom_boxplot(width = 0.1, color = "black", alpha = 0.2) +
# geom_point(position = position_jitter(width = 0.15), alpha = 0.8, size = 2) +
geom_dotplot(binaxis = "y", stackdir = "center", dotsize = 0.25, fill = "black") +
geom_point(aes(x = week, y = mean_weight), color = "red", size = 3) +
geom_line(aes(x = week, y = mean_weight, group = 1)) +
geom_text(
aes(x = week, y = max_weight + 0.25, label = sprintf('Mean: %.2f lbs', mean_weight)),  # adjust y using max_weight
vjust = 1,
color = 'red'
) +
geom_text(
aes(x = week, y = max_weight + 0.15, label = sprintf('Median: %.2f lbs', median_weight)),  # adjust y using max_weight
vjust = 1,
color = 'blue'
) +
# geom_text(
#   aes(x = week, y = mean_weight, label = sprintf('Mean: %.2f lbs', mean_weight)),
#   vjust = 2.5,
#   color = 'red'
# ) +
# geom_text(
#   aes(x = week, y = median_weight, label = sprintf('Median: %.2f lbs', median_weight)),
#   vjust = -1.5,
#   color = 'blue'
# ) +
geom_text(
data = mean_weights,
aes(x = midpoint, y = 9.7, label = sprintf('Change: %.2f lbs', delta)),
vjust = -0.5,
color = 'black'
) +
labs(x = 'Week',
y = 'Weight (lbs)',
title = "Jasper's Weight (lbs) Distribution",
subtitle = paste0(format(min(complete_weeks$Day), "%m/%d/%Y"), ' - ' , format(max(complete_weeks$Day), "%m/%d/%Y"))
) +
scale_fill_manual(values = custom_colors) +
scale_y_continuous(expand = c(0, 0), n.breaks = 10) +
scale_x_continuous(breaks = scales::pretty_breaks(n = length(unique(complete_weeks$week)))) +
# theme_minimal() +
theme_bw() +
# theme_clean() +
theme(legend.position = "none")
p3
###
# violin with dotplot
p3 <- daily_weight %>%
filter(Day %in% complete_weeks$Day) %>%  # filter origin data to only where complete week data available
group_by(week) %>%
mutate(mean_weight = mean(`Weight (lbs)`, na.rm = TRUE), # compute mean/median weight to add to boxplots
median_weight = median(`Weight (lbs)`, na.rm = TRUE),
max_weight = max(`Weight (lbs)`, na.rm = TRUE)  # calculate max weight per week
) %>%
ungroup() %>%
ggplot(aes(x = week, y = `Weight (lbs)`, group = week, fill = factor(week))) +
geom_violin(aes(x = week, y = `Weight (lbs)`, fill = factor(week))) +
geom_boxplot(width = 0.1, color = "black", alpha = 0.2) +
# geom_point(position = position_jitter(width = 0.15), alpha = 0.8, size = 2) +
geom_dotplot(binaxis = "y", stackdir = "center", dotsize = 0.25, fill = "black") +
geom_point(aes(x = week, y = mean_weight), color = "red", size = 3) +
geom_line(aes(x = week, y = mean_weight, group = 1)) +
geom_text(
aes(x = week, y = max_weight + 0.25, label = sprintf('Mean: %.2f lbs', mean_weight)),  # adjust y using max_weight
vjust = 1,
color = 'red'
) +
geom_text(
aes(x = week, y = max_weight + 0.15, label = sprintf('Median: %.2f lbs', median_weight)),  # adjust y using max_weight
vjust = 1,
color = 'blue'
) +
# geom_text(
#   aes(x = week, y = mean_weight, label = sprintf('Mean: %.2f lbs', mean_weight)),
#   vjust = 2.5,
#   color = 'red'
# ) +
# geom_text(
#   aes(x = week, y = median_weight, label = sprintf('Median: %.2f lbs', median_weight)),
#   vjust = -1.5,
#   color = 'blue'
# ) +
geom_text(
data = mean_weights,
aes(x = midpoint, y = 9.7, label = sprintf('Change: %.2f lbs', delta)),
vjust = -0.5,
color = 'black'
) +
labs(x = 'Week',
y = 'Weight (lbs)',
title = "Jasper's Weight (lbs) Distribution",
subtitle = paste0(format(min(complete_weeks$Day), "%m/%d/%Y"), ' - ' , format(max(complete_weeks$Day), "%m/%d/%Y"))
) +
scale_fill_manual(values = custom_colors) +
scale_y_continuous(expand = c(0, 0), n.breaks = 10) +
scale_x_continuous(breaks = scales::pretty_breaks(n = length(unique(complete_weeks$week)))) +
# theme_minimal() +
# theme_bw() +
theme_clean() +
theme(legend.position = "none")
p3
source("C:/Users/natha/repos/jasper_data/scripts/jasper_weekly_daily_weight_plots_secure_script.R", echo=TRUE)
source("C:/Users/natha/repos/jasper_data/scripts/jasper_weekly_daily_weight_plots_secure_script.R", echo=TRUE)
source("C:/Users/natha/repos/jasper_data/scripts/jasper_weekly_daily_weight_plots_secure_script.R", echo=TRUE)
source("C:/Users/natha/repos/jasper_data/scripts/jasper_weekly_daily_weight_plots_secure_script.R", echo=TRUE)
source("C:/Users/natha/repos/jasper_data/scripts/jasper_weekly_daily_weight_plots_secure_script.R", echo=TRUE)
