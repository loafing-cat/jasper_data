color = 'black'
) +
labs(x = 'Week',
y = 'Weight (lbs)',
title = "Jasper's Weight (lbs) Distribution",
subtitle = paste0(format(min(complete_weeks$Day), "%m/%d/%Y"), ' - ' , format(max(complete_weeks$Day), "%m/%d/%Y"))) +
# scale_y_continuous(expand = c(0, 0)) +
scale_fill_d3() +
theme_bw()
p3
ggsave(
filename = here("images", "jasper_weight_violin_series1.png"),
plot = p3,
dpi = 600,
width = 12,
height = 8
)
source("C:/Users/natha/jasper_data/scripts/Jasper Weight at Week 1 (technically week 2).R")
rm(list = ls()); gc()
pacman::p_load(tidyverse, rio, here, googlesheets4, ggsci, lubridate)
seven_day_avg <- read_sheet(
"https://docs.google.com/spreadsheets/d/1bpVf07Cliq4btREMlY_nAI321fm3UAEm4nGsgnMqlTs/edit#gid=1037741551",
sheet = "7-day Average"
)
daily_weight <- read_sheet(
"https://docs.google.com/spreadsheets/d/1bpVf07Cliq4btREMlY_nAI321fm3UAEm4nGsgnMqlTs/edit#gid=1037741551",
sheet = "Daily Weight"
)
# convert the Day column to Date type
daily_weight$Day <- as.Date(daily_weight$Day)
# calculate week numbers using lubridate week and adjust to start from May 6, 2024
baseline_date <- as.Date("2024-05-06")
daily_weight <- daily_weight %>%
mutate(week = (week(Day) - week(baseline_date) + 1))
# correct week for dates before the baseline
daily_weight$week[daily_weight$Day < baseline_date] <- 0
p1 <- daily_weight %>%
filter(Day >= as.Date("2024-05-06") & Day <= as.Date("2024-05-12")) %>%
mutate(mean_weight = mean(`Weight (lbs)`, na.rm = TRUE),
median_weight = median(`Weight (lbs)`, na.rm = TRUE)) %>%
ggplot(aes(x = "", y = `Weight (lbs)`)) +
geom_boxplot(fill = "lightblue", color = "darkblue", alpha = 1) +
geom_point(aes(x = 1, y = mean_weight), color = "red", size = 3) +
geom_text(
aes(x = 1, y = mean_weight, label = sprintf("Mean: %.2f lbs", mean_weight)),
vjust = 2.5,  # Adjust vertical position
color = "red"
) +
geom_text(
aes(x = 1, y = median_weight, label = sprintf("Median: %.2f lbs", median_weight)),
vjust = -1.5,  # Adjust vertical position for the median
color = "blue"
) +
labs(
y = "Weight (lbs)",
title = "Jasper's Weight (lbs) Distribution",
subtitle = "05/06/2024 - 05/12/2024"
) +
theme_bw()
# complete week data should have 7 days of non-NAs; use to plot complete weekly weight distributions
complete_weeks <- daily_weight %>%
group_by(week) %>%
filter(!is.na(`Weight (lbs)`)) %>%
mutate(freq = n()) %>%
filter(freq == 7) %>%
ungroup()
# Calculate mean weights for each week
mean_weights <- complete_weeks %>%
group_by(week) %>%
summarize(mean_weight = mean(`Weight (lbs)`, na.rm = TRUE))
# Calculate the differences between consecutive weeks
mean_weights <- mean_weights %>%
mutate(week_next = lead(week),
mean_next = lead(mean_weight),
diff = mean_next - mean_weight,
midpoint = (week + week_next) / 2)
# time series bar graph
p2 <- daily_weight %>%
# filter(Day > as.Date('2024-05-05')) %>%
filter(Day %in% complete_weeks$Day) %>%
group_by(week) %>%
mutate(mean_weight = mean(`Weight (lbs)`, na.rm = TRUE),
median_weight = median(`Weight (lbs)`, na.rm = TRUE)) %>%
ggplot(aes(x = week, y = `Weight (lbs)`, group = week)) +
geom_boxplot(fill = 'lightblue', color = 'darkblue', alpha = 1) +
geom_point(aes(x = week, y = mean_weight), color = 'red', size = 3) +
geom_line(aes(x = week, y = mean_weight, group = 1)) +
geom_text(
aes(x = week, y = mean_weight, label = sprintf('Mean: %.2f lbs', mean_weight)),
vjust = 2.5,
color = 'red'
) +
geom_text(
aes(x = week, y = median_weight, label = sprintf('Mean: %.2f lbs', median_weight)),
vjust = -1.5,
color = 'blue'
) +
geom_text(
data = mean_weights,
aes(x = midpoint, y = 9.7, label = sprintf('Change: %.2f lbs', diff)),
vjust = -0.5,
color = 'black'
) +
labs(x = 'Week',
y = 'Weight (lbs)',
title = "Jasper's Weight (lbs) Distribution",
subtitle = paste0(format(min(complete_weeks$Day), "%m/%d/%Y"), ' - ' , format(max(complete_weeks$Day), "%m/%d/%Y"))) +
scale_y_continuous(expand = c(0, 0)) +
scale_x_continuous(breaks = scales::pretty_breaks(n = length(unique(complete_weeks$week)))) +
theme_bw()
p2
p3 <- daily_weight %>%
# filter(Day > as.Date('2024-05-05')) %>%
filter(Day %in% complete_weeks$Day) %>%
group_by(week) %>%
mutate(mean_weight = mean(`Weight (lbs)`, na.rm = TRUE),
median_weight = median(`Weight (lbs)`, na.rm = TRUE)) %>%
ggplot(aes(x = week, y = `Weight (lbs)`, group = week)) +
# geom_boxplot(fill = 'lightblue', color = 'darkblue', alpha = 1) +
geom_violin(aes(x = week, y = `Weight (lbs)`, fill = factor(week))) +
geom_point(aes(x = week, y = mean_weight), color = 'red', size = 3) +
geom_line(aes(x = week, y = mean_weight, group = 1)) +
geom_text(
aes(x = week, y = mean_weight, label = sprintf('Mean: %.2f lbs', mean_weight)),
vjust = 2.5,
color = 'red'
) +
geom_text(
aes(x = week, y = median_weight, label = sprintf('Mean: %.2f lbs', median_weight)),
vjust = -1.5,
color = 'blue'
) +
geom_text(
data = mean_weights,
aes(x = midpoint, y = 9.7, label = sprintf('Change: %.2f lbs', diff)),
vjust = -0.5,
color = 'black'
) +
labs(x = 'Week',
y = 'Weight (lbs)',
title = "Jasper's Weight (lbs) Distribution",
subtitle = paste0(format(min(complete_weeks$Day), "%m/%d/%Y"), ' - ' , format(max(complete_weeks$Day), "%m/%d/%Y"))) +
# scale_y_continuous(expand = c(0, 0)) +
# scale_fill_d3() +
theme_bw()
p3
p3 <- daily_weight %>%
# filter(Day > as.Date('2024-05-05')) %>%
filter(Day %in% complete_weeks$Day) %>%
group_by(week) %>%
mutate(mean_weight = mean(`Weight (lbs)`, na.rm = TRUE),
median_weight = median(`Weight (lbs)`, na.rm = TRUE)) %>%
ggplot(aes(x = week, y = `Weight (lbs)`, group = week)) +
# geom_boxplot(fill = 'lightblue', color = 'darkblue', alpha = 1) +
geom_violin(aes(x = week, y = `Weight (lbs)`, fill = factor(week))) +
geom_point(aes(x = week, y = mean_weight), color = 'red', size = 3) +
geom_line(aes(x = week, y = mean_weight, group = 1)) +
geom_text(
aes(x = week, y = mean_weight, label = sprintf('Mean: %.2f lbs', mean_weight)),
vjust = 2.5,
color = 'red'
) +
geom_text(
aes(x = week, y = median_weight, label = sprintf('Mean: %.2f lbs', median_weight)),
vjust = -1.5,
color = 'blue'
) +
geom_text(
data = mean_weights,
aes(x = midpoint, y = 9.7, label = sprintf('Change: %.2f lbs', diff)),
vjust = -0.5,
color = 'black'
) +
labs(x = 'Week',
y = 'Weight (lbs)',
legend = "none",
title = "Jasper's Weight (lbs) Distribution",
subtitle = paste0(format(min(complete_weeks$Day), "%m/%d/%Y"), ' - ' , format(max(complete_weeks$Day), "%m/%d/%Y"))) +
# scale_y_continuous(expand = c(0, 0)) +
# scale_fill_d3() +
theme_bw()
p3
p3 <- daily_weight %>%
# filter(Day > as.Date('2024-05-05')) %>%
filter(Day %in% complete_weeks$Day) %>%
group_by(week) %>%
mutate(mean_weight = mean(`Weight (lbs)`, na.rm = TRUE),
median_weight = median(`Weight (lbs)`, na.rm = TRUE)) %>%
ggplot(aes(x = week, y = `Weight (lbs)`, group = week)) +
# geom_boxplot(fill = 'lightblue', color = 'darkblue', alpha = 1) +
geom_violin(aes(x = week, y = `Weight (lbs)`, fill = factor(week))) +
geom_point(aes(x = week, y = mean_weight), color = 'red', size = 3) +
geom_line(aes(x = week, y = mean_weight, group = 1)) +
geom_text(
aes(x = week, y = mean_weight, label = sprintf('Mean: %.2f lbs', mean_weight)),
vjust = 2.5,
color = 'red'
) +
geom_text(
aes(x = week, y = median_weight, label = sprintf('Mean: %.2f lbs', median_weight)),
vjust = -1.5,
color = 'blue'
) +
geom_text(
data = mean_weights,
aes(x = midpoint, y = 9.7, label = sprintf('Change: %.2f lbs', diff)),
vjust = -0.5,
color = 'black'
) +
labs(x = 'Week',
y = 'Weight (lbs)',
legend = "None"
title = "Jasper's Weight (lbs) Distribution",
p3
p3 <- daily_weight %>%
# filter(Day > as.Date('2024-05-05')) %>%
filter(Day %in% complete_weeks$Day) %>%
group_by(week) %>%
mutate(mean_weight = mean(`Weight (lbs)`, na.rm = TRUE),
median_weight = median(`Weight (lbs)`, na.rm = TRUE)) %>%
ggplot(aes(x = week, y = `Weight (lbs)`, group = week)) +
# geom_boxplot(fill = 'lightblue', color = 'darkblue', alpha = 1) +
geom_violin(aes(x = week, y = `Weight (lbs)`, fill = factor(week))) +
geom_point(aes(x = week, y = mean_weight), color = 'red', size = 3) +
geom_line(aes(x = week, y = mean_weight, group = 1)) +
geom_text(
aes(x = week, y = mean_weight, label = sprintf('Mean: %.2f lbs', mean_weight)),
vjust = 2.5,
color = 'red'
) +
geom_text(
aes(x = week, y = median_weight, label = sprintf('Mean: %.2f lbs', median_weight)),
vjust = -1.5,
color = 'blue'
) +
geom_text(
data = mean_weights,
aes(x = midpoint, y = 9.7, label = sprintf('Change: %.2f lbs', diff)),
vjust = -0.5,
color = 'black'
) +
labs(x = 'Week',
y = 'Weight (lbs)',
legend = none,
title = "Jasper's Weight (lbs) Distribution",
subtitle = paste0(format(min(complete_weeks$Day), "%m/%d/%Y"), ' - ' , format(max(complete_weeks$Day), "%m/%d/%Y"))) +
# scale_y_continuous(expand = c(0, 0)) +
# scale_fill_d3() +
theme_bw()
p3
p3 <- daily_weight %>%
# filter(Day > as.Date('2024-05-05')) %>%
filter(Day %in% complete_weeks$Day) %>%
group_by(week) %>%
mutate(mean_weight = mean(`Weight (lbs)`, na.rm = TRUE),
median_weight = median(`Weight (lbs)`, na.rm = TRUE)) %>%
ggplot(aes(x = week, y = `Weight (lbs)`, group = week)) +
# geom_boxplot(fill = 'lightblue', color = 'darkblue', alpha = 1) +
geom_violin(aes(x = week, y = `Weight (lbs)`, fill = factor(week))) +
geom_point(aes(x = week, y = mean_weight), color = 'red', size = 3) +
geom_line(aes(x = week, y = mean_weight, group = 1)) +
geom_text(
aes(x = week, y = mean_weight, label = sprintf('Mean: %.2f lbs', mean_weight)),
vjust = 2.5,
color = 'red'
) +
geom_text(
aes(x = week, y = median_weight, label = sprintf('Mean: %.2f lbs', median_weight)),
vjust = -1.5,
color = 'blue'
) +
geom_text(
data = mean_weights,
aes(x = midpoint, y = 9.7, label = sprintf('Change: %.2f lbs', diff)),
vjust = -0.5,
color = 'black'
) +
labs(x = 'Week',
y = 'Weight (lbs)',
title = "Jasper's Weight (lbs) Distribution",
subtitle = paste0(format(min(complete_weeks$Day), "%m/%d/%Y"), ' - ' , format(max(complete_weeks$Day), "%m/%d/%Y"))) +
# scale_y_continuous(expand = c(0, 0)) +
# scale_fill_d3() +
theme(legend.position = "none") +
theme_bw()
p3
") +
p3 <- daily_weight %>%
# filter(Day > as.Date('2024-05-05')) %>%
filter(Day %in% complete_weeks$Day) %>%
group_by(week) %>%
mutate(mean_weight = mean(`Weight (lbs)`, na.rm = TRUE),
median_weight = median(`Weight (lbs)`, na.rm = TRUE)) %>%
ggplot(aes(x = week, y = `Weight (lbs)`, group = week)) +
# geom_boxplot(fill = 'lightblue', color = 'darkblue', alpha = 1) +
geom_violin(aes(x = week, y = `Weight (lbs)`, fill = factor(week))) +
geom_point(aes(x = week, y = mean_weight), color = 'red', size = 3) +
geom_line(aes(x = week, y = mean_weight, group = 1)) +
geom_text(
aes(x = week, y = mean_weight, label = sprintf('Mean: %.2f lbs', mean_weight)),
vjust = 2.5,
color = 'red'
) +
geom_text(
aes(x = week, y = median_weight, label = sprintf('Mean: %.2f lbs', median_weight)),
vjust = -1.5,
color = 'blue'
) +
geom_text(
data = mean_weights,
aes(x = midpoint, y = 9.7, label = sprintf('Change: %.2f lbs', diff)),
vjust = -0.5,
color = 'black'
) +
labs(x = 'Week',
y = 'Weight (lbs)',
title = "Jasper's Weight (lbs) Distribution",
p3
p3 <- daily_weight %>%
# filter(Day > as.Date('2024-05-05')) %>%
filter(Day %in% complete_weeks$Day) %>%
group_by(week) %>%
mutate(mean_weight = mean(`Weight (lbs)`, na.rm = TRUE),
median_weight = median(`Weight (lbs)`, na.rm = TRUE)) %>%
ggplot(aes(x = week, y = `Weight (lbs)`, group = week)) +
# geom_boxplot(fill = 'lightblue', color = 'darkblue', alpha = 1) +
geom_violin(aes(x = week, y = `Weight (lbs)`, fill = factor(week))) +
geom_point(aes(x = week, y = mean_weight), color = 'red', size = 3) +
geom_line(aes(x = week, y = mean_weight, group = 1)) +
geom_text(
aes(x = week, y = mean_weight, label = sprintf('Mean: %.2f lbs', mean_weight)),
vjust = 2.5,
color = 'red'
) +
geom_text(
aes(x = week, y = median_weight, label = sprintf('Mean: %.2f lbs', median_weight)),
vjust = -1.5,
color = 'blue'
) +
geom_text(
data = mean_weights,
aes(x = midpoint, y = 9.7, label = sprintf('Change: %.2f lbs', diff)),
vjust = -0.5,
color = 'black'
) +
labs(x = 'Week',
y = 'Weight (lbs)',
title = "Jasper's Weight (lbs) Distribution",
subtitle = paste0(format(min(complete_weeks$Day), "%m/%d/%Y"), ' - ' , format(max(complete_weeks$Day), "%m/%d/%Y"))) +
# scale_y_continuous(expand = c(0, 0)) +
# scale_fill_d3() +
theme(legend.position = "none") +
theme_bw()
p3
p3 <- daily_weight %>%
# filter(Day > as.Date('2024-05-05')) %>%
filter(Day %in% complete_weeks$Day) %>%
group_by(week) %>%
mutate(mean_weight = mean(`Weight (lbs)`, na.rm = TRUE),
median_weight = median(`Weight (lbs)`, na.rm = TRUE)) %>%
ggplot(aes(x = week, y = `Weight (lbs)`, group = week)) +
# geom_boxplot(fill = 'lightblue', color = 'darkblue', alpha = 1) +
geom_violin(aes(x = week, y = `Weight (lbs)`, fill = factor(week))) +
geom_point(aes(x = week, y = mean_weight), color = 'red', size = 3) +
geom_line(aes(x = week, y = mean_weight, group = 1)) +
geom_text(
aes(x = week, y = mean_weight, label = sprintf('Mean: %.2f lbs', mean_weight)),
vjust = 2.5,
color = 'red'
) +
geom_text(
aes(x = week, y = median_weight, label = sprintf('Mean: %.2f lbs', median_weight)),
vjust = -1.5,
color = 'blue'
) +
geom_text(
data = mean_weights,
aes(x = midpoint, y = 9.7, label = sprintf('Change: %.2f lbs', diff)),
vjust = -0.5,
color = 'black'
) +
labs(x = 'Week',
y = 'Weight (lbs)',
title = "Jasper's Weight (lbs) Distribution",
subtitle = paste0(format(min(complete_weeks$Day), "%m/%d/%Y"), ' - ' , format(max(complete_weeks$Day), "%m/%d/%Y"))) +
# scale_y_continuous(expand = c(0, 0)) +
# scale_fill_d3() +
theme_bw() +
theme(legend.position = "none")
p3
ggsave(
filename = here("images", "jasper_weight_violin_series1.png"),
plot = p3,
dpi = 600,
width = 12,
height = 8
)
source("C:/Users/natha/jasper_data/scripts/Jasper Weight at Week 1 (technically week 2).R", echo=TRUE)
ggsave(
filename = here("images", "jasper_weight_series1.png"),
plot = p2,
dpi = 600,
width = 12,
height = 8
)
p4 <- daily_weight %>%
filter(Day > as.Date('2024-05-05')) %>%
ggplot(aes(x = Day, y = `Weight (lbs)`)) +
geom_point() +
geom_line()
p4
p4 <- daily_weight %>%
# filter(Day > as.Date('2024-05-05')) %>%
filter(Day %in% complete_weeks$Day) %>%
ggplot(aes(x = Day, y = `Weight (lbs)`)) +
geom_point() +
geom_line()
p4
p4 <- daily_weight %>%
# filter(Day > as.Date('2024-05-05')) %>%
filter(Day %in% complete_weeks$Day) %>%
ggplot(aes(x = Day, y = `Weight (lbs)`)) +
geom_point() +
geom_line() +
scale_y_continuous(expand = c(0,0 ), limits = c(0, 15)) +
theme_bw()
p4
p4 <- daily_weight %>%
# filter(Day > as.Date('2024-05-05')) %>%
filter(Day %in% complete_weeks$Day) %>%
ggplot(aes(x = Day, y = `Weight (lbs)`)) +
geom_point() +
geom_line() +
scale_y_continuous(expand = c(0,0 ), limits = c(5, 15)) +
theme_bw()
p4
p4 <- daily_weight %>%
# filter(Day > as.Date('2024-05-05')) %>%
filter(Day %in% complete_weeks$Day) %>%
ggplot(aes(x = Day, y = `Weight (lbs)`)) +
geom_point() +
geom_line() +
# scale_y_continuous(expand = c(0,0 ), limits = c(5, 15)) +
theme_bw()
p4
source("C:/Users/natha/jasper_data/scripts/jasper_weekly_daily_weight_plots_secure_script.R", echo=TRUE)
# time-series of daily weights
p2 <- daily_weight %>%
filter(Day > as.Date('2024-05-05') & !is.na(`Weight (lbs)`)) %>% # filter after May 5th, 2024 and exclude NAs
ggplot(aes(x = Day, y = `Weight (lbs)`)) +
geom_point(size = 2) +
geom_line() +
geom_hline(aes(yintercept = 11), color = "red", linetype = "dashed", size = 1.5) +
geom_hline(aes(yintercept = (11 + 12) / 2), color = "orange", linetype = "dashed", size = 1.5) + # healthy weight between [11.25, 12] (lbs) add average of two intervals as reference line
geom_hline(aes(yintercept = 12), color = "green", linetype = "dashed", size = 1.5) +
geom_hline(aes(yintercept = 9), color = "red", linetype = "dashed", size = 1.5) +
labs(x = "Date",
y = "Weight (lbs)",
title = "Jasper's Daily Weight (lbs)",
subtitle = "Healthy Weight [11, 12]; 11.5 is average of the interval"
) +
scale_y_continuous(expand = c(0, 0), limits = c(7, 15),
breaks = c(7, 8, 9, 10, 11, 11.25, 11.63, 12, 13, 14, 15)) +
# scale_y_continuous(expand = c(0, 0), limits = c(0, 15)) +
scale_x_date(date_breaks = "1 day", date_labels = "%m/%d/%Y") +
# scale_y_continuous(expand = c(0, 0), limits = c(5, 15),
#                    breaks = c(5, 6, 7, 8, 9, 10, 11, 11.25, 11.5, 12, 13, 14, 15)) +
# scale_y_continuous(expand = c(0, 0), limits = c(0, 15), breaks = seq(0, 15, by = 1)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
p2
# dynamically save ggplot
ggsave(
filename = paste0(here("images", "jasper_weight_daily_time_series"), format(Sys.Date(), "_%Y_%m_%d"), ".png"),
plot = p2,
dpi = 600,
width = 12,
height = 8
)
# time-series of daily weights
p2 <- daily_weight %>%
filter(Day > as.Date('2024-05-05') & !is.na(`Weight (lbs)`)) %>% # filter after May 5th, 2024 and exclude NAs
ggplot(aes(x = Day, y = `Weight (lbs)`)) +
geom_point(size = 2) +
geom_line() +
geom_hline(aes(yintercept = 11), color = "red", linetype = "dashed", size = 1.5) +
geom_hline(aes(yintercept = (11 + 12) / 2), color = "orange", linetype = "dashed", size = 1.5) + # healthy weight between [11.25, 12] (lbs) add average of two intervals as reference line
geom_hline(aes(yintercept = 12), color = "green", linetype = "dashed", size = 1.5) +
geom_hline(aes(yintercept = 9), color = "red", linetype = "dashed", size = 1.5) +
labs(x = "Date",
y = "Weight (lbs)",
title = "Jasper's Daily Weight (lbs)",
subtitle = "Healthy Weight [11, 12]; 11.5 is average of the interval"
) +
scale_y_continuous(expand = c(0, 0), limits = c(7, 15),
breaks = c(7, 8, 9, 10, 11, 11.5, 12, 13, 14, 15)) +
# scale_y_continuous(expand = c(0, 0), limits = c(0, 15)) +
scale_x_date(date_breaks = "1 day", date_labels = "%m/%d/%Y") +
# scale_y_continuous(expand = c(0, 0), limits = c(5, 15),
#                    breaks = c(5, 6, 7, 8, 9, 10, 11, 11.25, 11.5, 12, 13, 14, 15)) +
# scale_y_continuous(expand = c(0, 0), limits = c(0, 15), breaks = seq(0, 15, by = 1)) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
p2
# dynamically save ggplot
ggsave(
filename = paste0(here("images", "jasper_weight_daily_time_series"), format(Sys.Date(), "_%Y_%m_%d"), ".png"),
plot = p2,
dpi = 600,
width = 12,
height = 8
)
